{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","value","onClick","Board","squares","reducer","state","action","type","xInNext","payload","step","history","slice","concat","calculateWinner","winnerLines","isDraw","i","length","a","b","c","Game","useReducer","Array","fill","dispatch","current","winner","status","moves","map","move","desc","jumpTo","handleClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80298ae6.chunk.js","sourcesContent":["\nconst Square = (props) =>{\n\treturn(\n\t\t<button className={props.value ? \"btn disabled\" : \"btn\"} onClick={props.onClick}>\n\t\t\t{props.value}\n\n\t\t</button>\n\t)\n}\n\n\nexport default Square","import Square from './Square'\n\nconst Board = (props) =>{\n\treturn(\n\n\t\t<div className=\"board\">\n\t\t\t<div>\n\t\t\t\t<Square value={props.squares[0]} \n\t\t\t\tonClick={()=>{\n\t\t\t\t\tprops.onClick(0)\n\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t\t<Square value={props.squares[1]} \n\t\t\t\tonClick={()=>{\n\t\t\t\t\tprops.onClick(1)\n\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t\t<Square value={props.squares[2]} \n\t\t\t\tonClick={()=>{\n\t\t\t\t\tprops.onClick(2)\n\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t<Square value={props.squares[3]} \n\t\t\t\tonClick={()=>{\n\t\t\t\t\tprops.onClick(3)\n\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t\t<Square value={props.squares[4]} \n\t\t\t\tonClick={()=>{\n\t\t\t\t\tprops.onClick(4)\n\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t\t<Square value={props.squares[5]} \n\t\t\t\tonClick={()=>{\n\t\t\t\t\tprops.onClick(5)\n\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t<Square value={props.squares[6]} \n\t\t\t\tonClick={()=>{\n\t\t\t\t\tprops.onClick(6)\n\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t\t<Square value={props.squares[7]} \n\t\t\t\tonClick={()=>{\n\t\t\t\t\tprops.onClick(7)\n\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t\t<Square value={props.squares[8]} \n\t\t\t\tonClick={()=>{\n\t\t\t\t\tprops.onClick(8)\n\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t</div>\n\n\t)\n}\n\nexport default Board","import React, {useReducer} from 'react'\nimport Board from './Board'\n\nconst reducer = (state,action) =>{\n\tswitch(action.type){\n\t\tcase 'JUMP':\n\t\treturn {...state,\n\t\t\txInNext:action.payload.step%2 ===0,\n\t\t\thistory:state.history.slice(0,action.payload.step +1),\n\t\t}\n\t\tcase 'MOVE':\n\t\treturn {...state,history:state.history.concat({\n\t\t\tsquares: action.payload.squares\n\t\t}),\n\t\t\txInNext: !state.xInNext\n\t\t}\n\t\tdefault:\n\t\t\treturn state\n\n\t}\n}\n\nconst Game = ()=>{\n\tconst [state, dispatch] = useReducer(reducer,{\n\t\txInNext:true,\n\t\thistory:[{squares:Array(9).fill(null)}],\n\t})\n\tconst {xInNext,history}=state;\n\tconst jumpTo=(step) =>{\n\t\tdispatch({type:'JUMP',payload:{step}})\n\t}\n\n\tconst handleClick = (i)=>{\n\t\tconst current = history[history.length-1]\n\t\tconst squares = current.squares.slice()\n\t\tconst winner = calculateWinner(squares)\n\t\tif(winner || squares[i]){\n\t\t\treturn\n\t\t}\n\t\tsquares[i]=xInNext ? 'X' : 'O'\n\t\tdispatch({type:'MOVE',payload:{squares}})\n\t}\n\tconst current = history[history.length-1]\n\tconst winner = calculateWinner(current.squares)\n\n\n\n\tconst status=winner\n\t\t? winner == 'D' \n\t\t? 'Draw'\n\t\t: 'Winner is ' +  winner\n\t\t: 'Next player is ' + (xInNext ?' X' :' O')\n\tconst moves=  history.map((step, move) => {\n\t\tconst desc = move ? 'Got to #' + move :'Start the Game';\n\t\treturn (\n\t\t\t<li key={move}>\n\t\t\t<button onClick={()=> jumpTo(move)}>{desc}</button>\n\t\t\t</li>\n\t\t\t)\n\t\n\t})\n\n\tconst squares = Array(9).fill(null)\n\n\n\treturn (\n\n\t<div className={winner ? \"game disabled\" : 'game'}>\n\t\t<div className=\"game-board\">\n\t\t\t<Board  onClick={(i) => handleClick(i)} squares={current.squares}></Board>\n\t\t</div>\n\t\t<div className=\"game-info\">\n\t\t\t<div>{status}</div>\n\t\t\t<ul>{moves}</ul>\n\t\t</div>\n\t</div>\n\n\n\t)\n}\nconst calculateWinner = (squares) =>{\n\tconst winnerLines =[[0,1,2],\n\n\t[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6],]\n\tlet isDraw = true\n\tfor(let i=0; i< winnerLines.length; i++){\n\t\tconst [a,b,c] = winnerLines[i]\n\t\tif(squares[a] && squares[a] === squares[b] && squares[b]==squares[c]){\n\t\t\treturn squares[a]\n\t\t}\n\t\tif(!squares[a] || !squares[b] || !squares[c]){\n\t\t\tisDraw=false\n\t\t}\n\t}\n\n\tif(isDraw)return'D'\n\t\treturn null\n\n\n\n\t}\n\nexport default Game","import Game from './components/Game.js'\n\n\nfunction App() {\n  return (\n    <Game />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}